//circle class which draws a circle.

/** Implements at graphical circle */

class Circle {
	
	field int x, y;
	field int radius;

// Constructs a new circle with x, y as center

	constructor Circle new(int Rx, int Ry, int r) {
		let x = Rx;
		let y = Ry;
		let radius = r;
		do draw();
		return this;
	}


//dispose this created circle.

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

//method to draw the cicle with center at ( x,y ) and radius radius
	method void draw() {
		do Screen.setColor(true);
		do Screen.drawCircle(x,y,radius);
		return;
	}

// erase the existing circle whose center is at (x,y) and radius radius
	method void erase() {
		do Screen.setColor(false);
		do Screen.drawCircle(x,y,radius);
		return;
	}

//To move the circle up by 2 pixels

	method void moveUp() {
		if ((y-radius) > 1) {
			do Screen.setColor(false);
			do Screen.drawCircle(x,y,radius);
			let y = y-2;
			do Screen.setColor(true);
			do Screen.drawCircle(x,y,radius);
			}
		return;
	}
	   /** Moves the circle down by 2 pixels. */
   method void moveDown() {
      if ((y + radius) < 254) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, y, radius);
         let y = y + 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y, radius);
      }
      return;
   }

   /** Moves the circle left by 2 pixels. */
   method void moveLeft() {
      if ((x -radius)> 2) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, y, radius);
         let x = x - 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y,radius);
      }
      return;
   }

   /** Moves the circle right by 2 pixels. */
   method void moveRight() {
      if ((x + radius) < 510) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, y, radius);
         let x = x + 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y,radius);
      }
      return;
   }
}
