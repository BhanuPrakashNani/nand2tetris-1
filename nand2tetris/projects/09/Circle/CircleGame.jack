// This file consists of info that runs the game

class CircleGame {
	field Circle circle; // object of circle in the present game
	field int direction; // denotes which direction follow
// 0 = none, 1 = up, 2 = down, 3 = left , 4 = right


// Constructs  a new Circle Game.

	constructor CircleGame new() {
		//creates a default circle at (45,86) with radius 15
		let circle = Circle.new(45,86,15);
		let  direction = 0;
		return this;
	}

// Disposes the game.

	method void dispose() {
		do circle.dispose();
		do Memory.deAlloc(this);
		return;
	}

//Moves the circle depending to the direction

	method void moveCircle() {
		if (direction = 1) { do circle.moveUp();}
		if (direction = 2) { do circle.moveDown();}
		if (direction = 3) { do circle.moveLeft();}
		if (direction = 4) { do circle.moveRight();}
		do Sys.wait(5);
		return;
	}

// Game runner : handles input from user and invokes methods accordingly

	method void run() {
		var char key;// key presently pressed in the keyboard.
		var boolean exit;
		let exit = false;
		while (~exit) {
		
			//wait for something to be pressed in the keyboard.
			while( key = 0) {
				let key = Keyboard.keyPressed();
				do moveCircle();
			}
			if (key = 81) { let exit = true; } // q for exit

			if (key = 131) { let direction = 1; } // up key
			if (key = 133) { let direction = 2; } //down key
			if (key = 130) { let direction = 3; } //left key
			if (key = 132) { let direction = 4; } //right key  
		//waits for the key to be released
		while (~(key = 0)) {
			let key = Keyboard.keyPressed();
			do moveCircle();
		}
	}
	return;
	}
}
